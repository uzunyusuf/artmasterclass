@using MKT.WebUI.Models.Appointment
@using MKT.Business.Abstract.AppointmentsDB
@model AppointmentDashboardViewModel

@inject IOrderService _orderService
@{
    ViewBag.Title = "Appointment Dashboard";
    Layout = "_Layout";

    DateTime? workshopDate = null;
}

<div class="container-fluid">
    <div class="card shadow">
        <div class="card-body">
            <form asp-controller="Appointment" asp-action="AppointmentDashboard" method="post" id="appointmentFetchFormId">
                <div class="form-row">
                    <div class="form-group col-xl-6 col-lg-12">
                        <label><b>Date Between:</b></label>
                        <input type="text" asp-for="DateBetween" class="form-control mkt-daterangepicker-max-date-today" id="dateRangePicker" />
                    </div>
                    <div class="form-group col-xl-6 col-lg-12">
                        <label><b>Limit:</b></label>
                        <input type="number" min="10" value="10" asp-for="Limit" class="form-control" />
                    </div>
                </div>

                <div class="row justify-content-end">
                    <button class="btn btn-primary" type="submit">FETCH DATA</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="container-fluid mt-3">
    <div class="card shadow">
        <div class="card-body">
            <div class="row">
                @foreach (var order in Model.Appointment.Orders.Where(o => o.LineItems.Count > 0))
                {
                    <div class="col-12 mt-2 ">
                        <button class="btn w-100" data-toggle="modal" data-target="#chooseLocationModal" data-orderId="@order.Id" data-order-id="@order.Id">
                            <div class="card shadow mt-1" id="@order.Id">
                                <div class="card-header @(order.LocationOrder == null ? "" : "bg-gradient-success")">
                                    <div class="d-flex flex-row justify-content-@(order.LocationOrder == null ? "start" : "between") header-main-flex">
                                        <div class="d-flex flex-row">
                                            <h6 class="@(order.LocationOrder == null ? "text-primary" : "text-white font-weight-bold")">@order.Customer.FirstName @order.Customer.LastName</h6>
                                            <h6 class="ml-1 font-weight-bold @(order.LocationOrder == null ? "text-success" : "text-white ")">Subtotal price: @order.CurrentSubtotalPrice @(ParseTip(order.TotalTipReceived) != 0 ? " | Total tip: " + ParseTip(order.TotalTipReceived) : "")  </h6>
                                        </div>
                                        <h6 class="text-white">
                                            @if (order.LocationOrder != null)
                                            {
                                                @("Assigned to: " + order.LocationOrder.Location.LocationName + " Location")
                                            }
                                        </h6>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row no-gutters">
                                        <div class="col-6 text-left border-right ">
                                            <dl class="row">
                                                @{ workshopDate = @_orderService.getWorkshopDateTime(order.LineItems, order.Id); }
                                                <dt class="col-sm-3">Location:</dt>
                                                <dd class="col-sm-9">@_orderService.getWorkshopLocation(order.LineItems)</dd>

                                                <dt class="col-sm-3">Booking Date:</dt>
                                                <dd class="col-sm-9">@(workshopDate.HasValue ? workshopDate.Value.ToString("dd/MM/yyyy hh:mm tt") : "No booking date specified")</dd>

                                                <dt class="col-sm-3">Email:</dt>
                                                <dd class="col-sm-9">@order.Customer.Email</dd>

                                                <dt class="col-sm-3">Phone:</dt>
                                                <dd class="col-sm-9">@order.Customer.DefaultAddress.Phone</dd>

                                                <dt class="col-sm-3">Payment Method:</dt>
                                                <dd class="col-sm-9">@(string.Join(", ", order.PaymentGatewayNames))</dd>

                                                @if (order.LocationOrder != null)
                                                {
                                                    <dt class="col-sm-3">Assignment Date:</dt>
                                                    <dd class="col-sm-9 text-danger">@(order.LocationOrder.AssignedDate.ToString("MM/dd/yyyy"))</dd>
                                                }

                                            </dl>
                                        </div>
                                        <div class="col-6 text-left pl-4">
                                            <dl class="row pl-2">
                                                <dt class="col-sm-3">Product:</dt>
                                                <dd class="col-sm-9">@(@order.LineItems[0].Quantity > 1 ? $"{@order.LineItems[0].Quantity} x " : "") @order.LineItems[0].Name @order.LineItems[0].Price @order.Currency</dd>

                                                @if (order.LineItems.Count > 1)
                                                {
                                                    @for(var index = 1; index < order.LineItems.Count;index++)
                                                    {
                                                        <dt class="col-sm-3">@(index == 1 ? "Extras: " : "")</dt>
                                                        <dd class="col-sm-9">@(order.LineItems[index].Quantity > 1 ? $"{@order.LineItems[index].Quantity} x " : "") @order.LineItems[index].Name @order.LineItems[index].Price @order.Currency</dd>
                                                    }
                                                }
                                            </dl>
                                            <div class="position-absolute text-muted" style="bottom: 0; right: 0;">Transaction date: @order.CreatedAt.ToString("dd/MM/yyyy hh:mm:ss tt")</div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </button>
                    </div>
                }
            </div>

            <div class="row justify-content-around mt-3">
                <a class="btn btn-primary @(string.IsNullOrEmpty(Model.Appointment.PreviousLink) ? "disabled" : "")" asp-controller="Appointment" asp-action="AppointmentByUrl" asp-route-url="@Model.Appointment.PreviousLink">Previous</a>
                <a class="btn btn-primary @(string.IsNullOrEmpty(Model.Appointment.NextLink) ? "disabled" : "")" asp-controller="Appointment" asp-action="AppointmentByUrl" asp-route-url="@Model.Appointment.NextLink">Next</a>
            </div>

        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="chooseLocationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-gradient-primary text-white">
                <h5 class="modal-title">Choose Location</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-controller="Appointment" asp-action="SaveOrdertoLocation" method="post">
                <div class="modal-body">
                    <input type="text" id="orderIdInputId" class="d-none" asp-for="SaveOrderLocationModel.OrderId" />
                    <div class="form-group">
                        <label><b>Location</b></label>
                        <select class="form-control mkt-select2" asp-for="SaveOrderLocationModel.LocationId" asp-items="@Model.LocationSelectList">
                            <option selected="selected" disabled="disabled">- Please Select a Location -</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="AssignOrderToLocation(this)">Save changes</button>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts {
<script src="~/js/Controller/Appointment/AppointmentDashboard.js?v=1"></script>
}

@functions
{
    double ParseTip(string tip)
    {
        if (double.TryParse(tip, out double tipResult))
        {
            return tipResult;
        }
        return 0;

    }
}
